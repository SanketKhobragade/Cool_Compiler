void BFS()
    {
    
        int s = 0;
        boolean visited[] = new boolean[V];
 
        LinkedList<Integer> queue = new LinkedList<Integer>();
 
        visited[s]=true;
        queue.add(s);
 
        while (queue.size() != 0){
            s = queue.poll();
            Iterator<Integer> i = adj[s].listIterator();
            while (i.hasNext()){
                int n = i.next();
                if (!visited[n]){
                    visited[n] = true;
                    queue.add(n);
                }
            }
            if(queue.size() == 0) {
                for(int i = 0; i < id.size(); ++i)
                    if(visited[i] == false) {
                        q.offer(i);
                        break;
                    }
            }
        }
    }